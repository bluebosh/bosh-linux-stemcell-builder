---
groups:
  - name: all
    jobs:
      - customize-stemcell-version
      - capture-stemcell
      - generate-light-stemcell
      - test-stemcell
      - promte-stemcell


shared:
  - &prepare-director
    task: prepare-director
    file: pipelines/softlayer/tasks/prepare-director.yml
    params: &prepare-director-params
      BOSH_CLIENT:                          ((stemcell-test-director-username))
      BOSH_CLIENT_SECRET:                   ((stemcell-test-director-password))
      SL_USERNAME:                          ((softlayer-username))
      SL_API_KEY:                           ((softlayer-api-key))
      SL_DATACENTER:                        ((softlayer-datacenter))
      SL_VLAN_PUBLIC:                       ((softlayer-vlan-public))
      SL_VLAN_PRIVATE:                      ((softlayer-vlan-private))
      SL_VM_DOMAIN:                         ((softlayer-vm-domain))
      SL_VM_NAME_PREFIX:                    ((softlayer-director-name-prefix))

  - &deploy-director
    task: deploy-director
    file: pipelines/shared/tasks/deploy-director.yml
    params: *prepare-director-params

  - &prepare-bats
    task: prepare-bats
    file: pipelines/softlayer/tasks/prepare-bats.yml
    params: &prepare-bats-params
      BAT_VCAP_PASSWORD:      ((bat-vcap-password))
      BOSH_CLIENT:            ((stemcell-test-director-username))
      BOSH_CLIENT_SECRET:     ((stemcell-test-director-password))
      SL_DATACENTER:          ((softlayer-datacenter))
      SL_VLAN_PRIVATE:        ((softlayer-vlan-private))
      SL_VLAN_PUBLIC:         ((softlayer-vlan-public))
      SL_VM_DOMAIN:           ((softlayer-vm-domain))
      SL_VM_NAME_PREFIX:      bats-experimental-
      STEMCELL_NAME:          bosh-softlayer-xen-ubuntu-trusty-go_agent

  - &run-bats
    task: run-bats
    file: pipelines/shared/tasks/run-bats.yml

  - &teardown
    task: teardown
    file: pipelines/shared/tasks/teardown.yml
    params:
      DEPLOYMENT_NAME: certification

jobs:
  - name: customize-stemcell-version
    plan:
      - get: bosh-linux-stemcell-builder
      - get: stemcell
        resource: light-softlayer-stemcell-prod
      - task: customize-stemcell-version
        file: bosh-linux-stemcell-builder/ci/custom_stemcell/tasks/customize-stemcell-version.yml
      - put: version
        params: {file: version/number}

  - name: capture-stemcell
    plan:
      - get: bosh-linux-stemcell-builder
      - get: version
        trigger: true
        passed: [customize-stemcell-version]
      - task: capture-stemcell
        file: bosh-linux-stemcell-builder/ci/custom_stemcell/tasks/capture-stemcell.yml
        params:
          stemcell_vm_id: ((softlayer-vm-id))
          SL_USERNAME: ((softlayer-username))
          SL_API_KEY: ((softlayer-api-key))
          sl_para_id: ((sl_para_id))
          longName: ((longName))
          sl_para_name: ((sl_para_name))
      - put: stemcell-info
        params: 
          file: stemcell-image/stemcell-info-*.json
          acl: public-read

  - name: generate-light-stemcell
    plan:
      - aggregate:
        - get: bosh-linux-stemcell-builder
        - get: stemcell-info
          passed: [capture-stemcell]        
        - get: version
          passed: [capture-stemcell]
          trigger: true
      - task: generate-light-stemcell
        file: bosh-linux-stemcell-builder/ci/custom_stemcell/tasks/generate-light-stemcell.yml
        params:
          HYPERVISOR: xen
          IAAS: bluemix
          OS_NAME: ubuntu
          OS_VERSION: xenial
          SL_USERNAME: ((softlayer-username))
          SL_API_KEY: ((softlayer-api-key))
      - put: light-bluemix-stemcell
        params: 
          file: light-stemcell/*.tgz
          acl: public-read


  - name: test-stemcell
    serial: true
    plan:
      - aggregate:
        - get: version
          trigger: true
          passed: [generate-light-stemcell]
        - get: bosh-linux-stemcell-builder
        - get: pipeline-image
        - get: deploy-yml
        - get: light-bluemix-stemcell
          passed: [generate-light-stemcell]
      - task: test-stemcell
        image: pipeline-image
        file: bosh-linux-stemcell-builder/ci/custom_stemcell/tasks/test-stemcell.yml
        params:
          HYPERVISOR: xen
          IAAS: bluemix
          OS_NAME: ubuntu
          OS_VERSION: xenial
          RELEASE: ((security-release))
          ALIAS: ((alias))
          CA_CERT: ((boshcli_ca_cert.private_key))
          endpoint: ((stemcell-sl-os-endpoint))
          bucket: ((candidate-custom-bluemix-stemcell-bucket))
          filew3_server: ((file_w3_server))
          security_client_crt: ((security_client_crt.private_key))
          security_client_key: ((security_client_key.private_key))
          security_ca_pem: ((security_ca_pem.private_key))

  - name: promte-stemcell
    plan:
      - aggregate:
        - get: bosh-linux-stemcell-builder
        - get: light-bluemix-stemcell
          trigger: true
          passed: [test-stemcell]
        - get: version
          passed: [test-stemcell]
      - task: promte-stemcell
        file: bosh-linux-stemcell-builder/ci/custom_stemcell/tasks/publish.yml
        params:
          PUBLISHED_BUCKET_NAME: bluemix-custom-stemcell
      - put: bluemix-stemcell
        params: 
          file: bluemix-stemcell/*.tgz
          acl: public-read

resources:
  - name: bosh-linux-stemcell-builder
    type: git
    source:
      uri: git@github.com:bluebosh/bosh-linux-stemcell-builder
      branch: custom_stemcell
      private_key: ((github_private_key.private_key))

  - name: stemcell-info
    type: s3
    source:
      bucket: ((candidate-custom-bluemix-stemcell-bucket))
      access_key_id: ((stemcell-sl-os-access-key))
      secret_access_key: ((stemcell-sl-os-secret-key))
      endpoint: ((stemcell-sl-os-endpoint))
      regexp: stemcell-info-(.*).json

  - name: version
    type: semver
    source:
      driver: s3
      initial_version: ((stemcell_initial_version))
      key: ((stemcell_version_key))
      bucket: ((candidate-custom-bluemix-stemcell-bucket))
      access_key_id: ((stemcell-sl-os-access-key))
      secret_access_key: ((stemcell-sl-os-secret-key))
      endpoint: ((stemcell-sl-os-endpoint))

  - name: light-softlayer-stemcell-prod
    type: s3
    source:
      access_key_id: ((stemcell-aws-access-key))
      secret_access_key: ((stemcell-aws-secret-key))
      bucket: bosh-softlayer-cpi-stemcells
      regexp: light-bosh-stemcell-(.*)-softlayer-xen-ubuntu-xenial-go_agent.tgz

  - name: light-bluemix-stemcell
    type: s3
    source:
      bucket: ((candidate-custom-bluemix-stemcell-bucket))
      regexp: light-bosh-stemcell-(.*)-bluemix-xen-ubuntu-xenial-go_agent.tgz
      access_key_id: ((stemcell-sl-os-access-key))
      secret_access_key: ((stemcell-sl-os-secret-key))
      endpoint: ((stemcell-sl-os-endpoint))

  - name: bluemix-stemcell
    type: s3
    source:
      bucket: bluemix-custom-stemcell
      regexp: light-bosh-stemcell-(.*)-bluemix-xen-ubuntu-xenial-go_agent.tgz
      access_key_id: ((stemcell-sl-os-access-key))
      secret_access_key: ((stemcell-sl-os-secret-key))
      endpoint: ((stemcell-sl-os-endpoint))

  - name: pipeline-image
    type: s3
    source:
      password: ((private-registry-docker-password-read-only))
      repository: registry.eu-gb.bluemix.net/concourse/ci-bluemix-pipelines
      tag: latest
      username: token
    type: docker-image

  - name: deploy-yml
    type: git
    source:
      uri: git@github.ibm.com:BlueMix-Fabric/bosh-cdl-private
      branch: master
      private_key: ((bluemix_private_key.private_key))
